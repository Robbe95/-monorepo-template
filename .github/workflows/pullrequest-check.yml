---
name: Build & Test Web

#
# Build, test & lint a Nuxt application
# Note: will create an artifact called 'app-build'.
#

on: # yamllint disable-line rule:truthy
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

  workflow_call:
    inputs:
      node-version:
        description: Node Version (such as 20.5)
        default: "lts/*"
        type: string
      test-timeout:
        description: Time (in minutes) after wich the test job will timeout
        default: 5
        type: number

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # First lint & build
  lint:
    if: github.event.pull_request.draft == false
    name: Lint Application
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint
  build:
    if: github.event.pull_request.draft == false
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run build
        run: pnpm client-portal:build
      # Archive
      - name: Store archive
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            ./apps/client-portal/.output

  # Then test
  test:
    if: github.event.pull_request.draft == false
    name: Test Application
    needs: [lint, build]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: app-build
      - name: Run tests
        run: pnpm test
